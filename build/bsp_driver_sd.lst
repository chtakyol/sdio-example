ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"bsp_driver_sd.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.BSP_SD_ITConfig,"ax",%progbits
  18              		.align	1
  19              		.weak	BSP_SD_ITConfig
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	BSP_SD_ITConfig:
  26              	.LFB131:
  27              		.file 1 "FATFS/Target/bsp_driver_sd.c"
   1:FATFS/Target/bsp_driver_sd.c **** /**
   2:FATFS/Target/bsp_driver_sd.c ****  ******************************************************************************
   3:FATFS/Target/bsp_driver_sd.c ****   * @file    bsp_driver_sd.c for F4 (based on stm324x9i_eval_sd.c)
   4:FATFS/Target/bsp_driver_sd.c ****  * @brief   This file includes a generic uSD card driver.
   5:FATFS/Target/bsp_driver_sd.c ****  *          To be completed by the user according to the board used for the project.
   6:FATFS/Target/bsp_driver_sd.c ****  * @note    Some functions generated as weak: they can be overridden by
   7:FATFS/Target/bsp_driver_sd.c ****  *          - code in user files
   8:FATFS/Target/bsp_driver_sd.c ****  *          - or BSP code from the FW pack files
   9:FATFS/Target/bsp_driver_sd.c ****  *          if such files are added to the generated project (by the user).
  10:FATFS/Target/bsp_driver_sd.c ****  ******************************************************************************
  11:FATFS/Target/bsp_driver_sd.c ****   * @attention
  12:FATFS/Target/bsp_driver_sd.c ****   *
  13:FATFS/Target/bsp_driver_sd.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  14:FATFS/Target/bsp_driver_sd.c ****   * All rights reserved.</center></h2>
  15:FATFS/Target/bsp_driver_sd.c ****   *
  16:FATFS/Target/bsp_driver_sd.c ****   * This software component is licensed by ST under Ultimate Liberty license
  17:FATFS/Target/bsp_driver_sd.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  18:FATFS/Target/bsp_driver_sd.c ****   * the License. You may obtain a copy of the License at:
  19:FATFS/Target/bsp_driver_sd.c ****   *                             www.st.com/SLA0044
  20:FATFS/Target/bsp_driver_sd.c ****   *
  21:FATFS/Target/bsp_driver_sd.c ****  ******************************************************************************
  22:FATFS/Target/bsp_driver_sd.c ****  */
  23:FATFS/Target/bsp_driver_sd.c **** 
  24:FATFS/Target/bsp_driver_sd.c **** #ifdef OLD_API
  25:FATFS/Target/bsp_driver_sd.c **** /* kept to avoid issue when migrating old projects. */
  26:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN 0 */
  27:FATFS/Target/bsp_driver_sd.c **** 
  28:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END 0 */
  29:FATFS/Target/bsp_driver_sd.c **** #else
  30:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN FirstSection */
  31:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify / undefine following code or add new definitions */
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 2


  32:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END FirstSection */
  33:FATFS/Target/bsp_driver_sd.c **** /* Includes ------------------------------------------------------------------*/
  34:FATFS/Target/bsp_driver_sd.c **** #include "bsp_driver_sd.h"
  35:FATFS/Target/bsp_driver_sd.c **** 
  36:FATFS/Target/bsp_driver_sd.c **** /* Extern variables ---------------------------------------------------------*/
  37:FATFS/Target/bsp_driver_sd.c **** 
  38:FATFS/Target/bsp_driver_sd.c **** extern SD_HandleTypeDef hsd;
  39:FATFS/Target/bsp_driver_sd.c **** 
  40:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeInitSection */
  41:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify / undefine following code or add code */
  42:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeInitSection */
  43:FATFS/Target/bsp_driver_sd.c **** /**
  44:FATFS/Target/bsp_driver_sd.c ****   * @brief  Initializes the SD card device.
  45:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
  46:FATFS/Target/bsp_driver_sd.c ****   */
  47:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_Init(void)
  48:FATFS/Target/bsp_driver_sd.c **** {
  49:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
  50:FATFS/Target/bsp_driver_sd.c ****   /* Check if the SD card is plugged in the slot */
  51:FATFS/Target/bsp_driver_sd.c ****   if (BSP_SD_IsDetected() != SD_PRESENT)
  52:FATFS/Target/bsp_driver_sd.c ****   {
  53:FATFS/Target/bsp_driver_sd.c ****     return MSD_ERROR;
  54:FATFS/Target/bsp_driver_sd.c ****   }
  55:FATFS/Target/bsp_driver_sd.c ****   /* HAL SD initialization */
  56:FATFS/Target/bsp_driver_sd.c ****   sd_state = HAL_SD_Init(&hsd);
  57:FATFS/Target/bsp_driver_sd.c **** 
  58:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
  59:FATFS/Target/bsp_driver_sd.c **** }
  60:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN AfterInitSection */
  61:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
  62:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END AfterInitSection */
  63:FATFS/Target/bsp_driver_sd.c **** 
  64:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN InterruptMode */
  65:FATFS/Target/bsp_driver_sd.c **** /**
  66:FATFS/Target/bsp_driver_sd.c ****   * @brief  Configures Interrupt mode for SD detection pin.
  67:FATFS/Target/bsp_driver_sd.c ****   * @retval Returns 0
  68:FATFS/Target/bsp_driver_sd.c ****   */
  69:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_ITConfig(void)
  70:FATFS/Target/bsp_driver_sd.c **** {
  28              		.loc 1 70 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  71:FATFS/Target/bsp_driver_sd.c ****   /* Code to be updated by the user or replaced by one from the FW pack (in a stmxxxx_sd.c file) */
  72:FATFS/Target/bsp_driver_sd.c **** 
  73:FATFS/Target/bsp_driver_sd.c ****   return (uint8_t)0;
  74:FATFS/Target/bsp_driver_sd.c **** }
  33              		.loc 1 74 0
  34 0000 0020     		movs	r0, #0
  35 0002 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE131:
  39              		.section	.text.BSP_SD_DetectIT,"ax",%progbits
  40              		.align	1
  41              		.weak	BSP_SD_DetectIT
  42              		.syntax unified
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 3


  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	BSP_SD_DetectIT:
  48              	.LFB132:
  75:FATFS/Target/bsp_driver_sd.c **** 
  76:FATFS/Target/bsp_driver_sd.c **** /** @brief  SD detect IT treatment
  77:FATFS/Target/bsp_driver_sd.c ****   */
  78:FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_DetectIT(void)
  79:FATFS/Target/bsp_driver_sd.c **** {
  49              		.loc 1 79 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  80:FATFS/Target/bsp_driver_sd.c ****   /* Code to be updated by the user or replaced by one from the FW pack (in a stmxxxx_sd.c file) */
  81:FATFS/Target/bsp_driver_sd.c **** }
  54              		.loc 1 81 0
  55 0000 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE132:
  59              		.section	.text.BSP_SD_ReadBlocks,"ax",%progbits
  60              		.align	1
  61              		.weak	BSP_SD_ReadBlocks
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	BSP_SD_ReadBlocks:
  68              	.LFB133:
  82:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END InterruptMode */
  83:FATFS/Target/bsp_driver_sd.c **** 
  84:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeReadBlocksSection */
  85:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
  86:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeReadBlocksSection */
  87:FATFS/Target/bsp_driver_sd.c **** /**
  88:FATFS/Target/bsp_driver_sd.c ****   * @brief  Reads block(s) from a specified address in an SD card, in polling mode.
  89:FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
  90:FATFS/Target/bsp_driver_sd.c ****   * @param  ReadAddr: Address from where data is to be read
  91:FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to read
  92:FATFS/Target/bsp_driver_sd.c ****   * @param  Timeout: Timeout for read operation
  93:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
  94:FATFS/Target/bsp_driver_sd.c ****   */
  95:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_ReadBlocks(uint32_t *pData, uint32_t ReadAddr, uint32_t NumOfBlocks, uint32_t
  96:FATFS/Target/bsp_driver_sd.c **** {
  69              		.loc 1 96 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              	.LVL0:
  74 0000 00B5     		push	{lr}
  75              	.LCFI0:
  76              		.cfi_def_cfa_offset 4
  77              		.cfi_offset 14, -4
  78 0002 83B0     		sub	sp, sp, #12
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 4


  81              	.LVL1:
  97:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
  98:FATFS/Target/bsp_driver_sd.c **** 
  99:FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_ReadBlocks(&hsd, (uint8_t *)pData, ReadAddr, NumOfBlocks, Timeout) != HAL_OK)
  82              		.loc 1 99 0
  83 0004 0093     		str	r3, [sp]
  84 0006 1346     		mov	r3, r2
  85              	.LVL2:
  86 0008 0A46     		mov	r2, r1
  87              	.LVL3:
  88 000a 0146     		mov	r1, r0
  89              	.LVL4:
  90 000c 0348     		ldr	r0, .L7
  91              	.LVL5:
  92 000e FFF7FEFF 		bl	HAL_SD_ReadBlocks
  93              	.LVL6:
  94 0012 00B1     		cbz	r0, .L4
 100:FATFS/Target/bsp_driver_sd.c ****   {
 101:FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
  95              		.loc 1 101 0
  96 0014 0120     		movs	r0, #1
  97              	.L4:
  98              	.LVL7:
 102:FATFS/Target/bsp_driver_sd.c ****   }
 103:FATFS/Target/bsp_driver_sd.c **** 
 104:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 105:FATFS/Target/bsp_driver_sd.c **** }
  99              		.loc 1 105 0
 100 0016 03B0     		add	sp, sp, #12
 101              	.LCFI2:
 102              		.cfi_def_cfa_offset 4
 103              		@ sp needed
 104 0018 5DF804FB 		ldr	pc, [sp], #4
 105              	.L8:
 106              		.align	2
 107              	.L7:
 108 001c 00000000 		.word	hsd
 109              		.cfi_endproc
 110              	.LFE133:
 112              		.section	.text.BSP_SD_WriteBlocks,"ax",%progbits
 113              		.align	1
 114              		.weak	BSP_SD_WriteBlocks
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu fpv4-sp-d16
 120              	BSP_SD_WriteBlocks:
 121              	.LFB134:
 106:FATFS/Target/bsp_driver_sd.c **** 
 107:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeWriteBlocksSection */
 108:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 109:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeWriteBlocksSection */
 110:FATFS/Target/bsp_driver_sd.c **** /**
 111:FATFS/Target/bsp_driver_sd.c ****   * @brief  Writes block(s) to a specified address in an SD card, in polling mode.
 112:FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 113:FATFS/Target/bsp_driver_sd.c ****   * @param  WriteAddr: Address from where data is to be written
 114:FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to write
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 5


 115:FATFS/Target/bsp_driver_sd.c ****   * @param  Timeout: Timeout for write operation
 116:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 117:FATFS/Target/bsp_driver_sd.c ****   */
 118:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_WriteBlocks(uint32_t *pData, uint32_t WriteAddr, uint32_t NumOfBlocks, uint32
 119:FATFS/Target/bsp_driver_sd.c **** {
 122              		.loc 1 119 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              	.LVL8:
 127 0000 00B5     		push	{lr}
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 4
 130              		.cfi_offset 14, -4
 131 0002 83B0     		sub	sp, sp, #12
 132              	.LCFI4:
 133              		.cfi_def_cfa_offset 16
 134              	.LVL9:
 120:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 121:FATFS/Target/bsp_driver_sd.c **** 
 122:FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_WriteBlocks(&hsd, (uint8_t *)pData, WriteAddr, NumOfBlocks, Timeout) != HAL_OK)
 135              		.loc 1 122 0
 136 0004 0093     		str	r3, [sp]
 137 0006 1346     		mov	r3, r2
 138              	.LVL10:
 139 0008 0A46     		mov	r2, r1
 140              	.LVL11:
 141 000a 0146     		mov	r1, r0
 142              	.LVL12:
 143 000c 0348     		ldr	r0, .L13
 144              	.LVL13:
 145 000e FFF7FEFF 		bl	HAL_SD_WriteBlocks
 146              	.LVL14:
 147 0012 00B1     		cbz	r0, .L10
 123:FATFS/Target/bsp_driver_sd.c ****   {
 124:FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 148              		.loc 1 124 0
 149 0014 0120     		movs	r0, #1
 150              	.L10:
 151              	.LVL15:
 125:FATFS/Target/bsp_driver_sd.c ****   }
 126:FATFS/Target/bsp_driver_sd.c **** 
 127:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 128:FATFS/Target/bsp_driver_sd.c **** }
 152              		.loc 1 128 0
 153 0016 03B0     		add	sp, sp, #12
 154              	.LCFI5:
 155              		.cfi_def_cfa_offset 4
 156              		@ sp needed
 157 0018 5DF804FB 		ldr	pc, [sp], #4
 158              	.L14:
 159              		.align	2
 160              	.L13:
 161 001c 00000000 		.word	hsd
 162              		.cfi_endproc
 163              	.LFE134:
 165              		.section	.text.BSP_SD_ReadBlocks_DMA,"ax",%progbits
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 6


 166              		.align	1
 167              		.weak	BSP_SD_ReadBlocks_DMA
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu fpv4-sp-d16
 173              	BSP_SD_ReadBlocks_DMA:
 174              	.LFB135:
 129:FATFS/Target/bsp_driver_sd.c **** 
 130:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeReadDMABlocksSection */
 131:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 132:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeReadDMABlocksSection */
 133:FATFS/Target/bsp_driver_sd.c **** /**
 134:FATFS/Target/bsp_driver_sd.c ****   * @brief  Reads block(s) from a specified address in an SD card, in DMA mode.
 135:FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 136:FATFS/Target/bsp_driver_sd.c ****   * @param  ReadAddr: Address from where data is to be read
 137:FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to read
 138:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 139:FATFS/Target/bsp_driver_sd.c ****   */
 140:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_ReadBlocks_DMA(uint32_t *pData, uint32_t ReadAddr, uint32_t NumOfBlocks)
 141:FATFS/Target/bsp_driver_sd.c **** {
 175              		.loc 1 141 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              	.LVL16:
 180 0000 08B5     		push	{r3, lr}
 181              	.LCFI6:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 3, -8
 184              		.cfi_offset 14, -4
 185              	.LVL17:
 142:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 143:FATFS/Target/bsp_driver_sd.c **** 
 144:FATFS/Target/bsp_driver_sd.c ****   /* Read block(s) in DMA transfer mode */
 145:FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_ReadBlocks_DMA(&hsd, (uint8_t *)pData, ReadAddr, NumOfBlocks) != HAL_OK)
 186              		.loc 1 145 0
 187 0002 1346     		mov	r3, r2
 188 0004 0A46     		mov	r2, r1
 189              	.LVL18:
 190 0006 0146     		mov	r1, r0
 191              	.LVL19:
 192 0008 0248     		ldr	r0, .L19
 193              	.LVL20:
 194 000a FFF7FEFF 		bl	HAL_SD_ReadBlocks_DMA
 195              	.LVL21:
 196 000e 00B1     		cbz	r0, .L16
 146:FATFS/Target/bsp_driver_sd.c ****   {
 147:FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 197              		.loc 1 147 0
 198 0010 0120     		movs	r0, #1
 199              	.L16:
 200              	.LVL22:
 148:FATFS/Target/bsp_driver_sd.c ****   }
 149:FATFS/Target/bsp_driver_sd.c **** 
 150:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 151:FATFS/Target/bsp_driver_sd.c **** }
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 7


 201              		.loc 1 151 0
 202 0012 08BD     		pop	{r3, pc}
 203              	.L20:
 204              		.align	2
 205              	.L19:
 206 0014 00000000 		.word	hsd
 207              		.cfi_endproc
 208              	.LFE135:
 210              		.section	.text.BSP_SD_WriteBlocks_DMA,"ax",%progbits
 211              		.align	1
 212              		.weak	BSP_SD_WriteBlocks_DMA
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv4-sp-d16
 218              	BSP_SD_WriteBlocks_DMA:
 219              	.LFB136:
 152:FATFS/Target/bsp_driver_sd.c **** 
 153:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeWriteDMABlocksSection */
 154:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 155:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeWriteDMABlocksSection */
 156:FATFS/Target/bsp_driver_sd.c **** /**
 157:FATFS/Target/bsp_driver_sd.c ****   * @brief  Writes block(s) to a specified address in an SD card, in DMA mode.
 158:FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 159:FATFS/Target/bsp_driver_sd.c ****   * @param  WriteAddr: Address from where data is to be written
 160:FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to write
 161:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 162:FATFS/Target/bsp_driver_sd.c ****   */
 163:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_WriteBlocks_DMA(uint32_t *pData, uint32_t WriteAddr, uint32_t NumOfBlocks)
 164:FATFS/Target/bsp_driver_sd.c **** {
 220              		.loc 1 164 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              	.LVL23:
 225 0000 08B5     		push	{r3, lr}
 226              	.LCFI7:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 3, -8
 229              		.cfi_offset 14, -4
 230              	.LVL24:
 165:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 166:FATFS/Target/bsp_driver_sd.c **** 
 167:FATFS/Target/bsp_driver_sd.c ****   /* Write block(s) in DMA transfer mode */
 168:FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_WriteBlocks_DMA(&hsd, (uint8_t *)pData, WriteAddr, NumOfBlocks) != HAL_OK)
 231              		.loc 1 168 0
 232 0002 1346     		mov	r3, r2
 233 0004 0A46     		mov	r2, r1
 234              	.LVL25:
 235 0006 0146     		mov	r1, r0
 236              	.LVL26:
 237 0008 0248     		ldr	r0, .L25
 238              	.LVL27:
 239 000a FFF7FEFF 		bl	HAL_SD_WriteBlocks_DMA
 240              	.LVL28:
 241 000e 00B1     		cbz	r0, .L22
 169:FATFS/Target/bsp_driver_sd.c ****   {
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 8


 170:FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 242              		.loc 1 170 0
 243 0010 0120     		movs	r0, #1
 244              	.L22:
 245              	.LVL29:
 171:FATFS/Target/bsp_driver_sd.c ****   }
 172:FATFS/Target/bsp_driver_sd.c **** 
 173:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 174:FATFS/Target/bsp_driver_sd.c **** }
 246              		.loc 1 174 0
 247 0012 08BD     		pop	{r3, pc}
 248              	.L26:
 249              		.align	2
 250              	.L25:
 251 0014 00000000 		.word	hsd
 252              		.cfi_endproc
 253              	.LFE136:
 255              		.section	.text.BSP_SD_Erase,"ax",%progbits
 256              		.align	1
 257              		.weak	BSP_SD_Erase
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 261              		.fpu fpv4-sp-d16
 263              	BSP_SD_Erase:
 264              	.LFB137:
 175:FATFS/Target/bsp_driver_sd.c **** 
 176:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeEraseSection */
 177:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 178:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeEraseSection */
 179:FATFS/Target/bsp_driver_sd.c **** /**
 180:FATFS/Target/bsp_driver_sd.c ****   * @brief  Erases the specified memory area of the given SD card.
 181:FATFS/Target/bsp_driver_sd.c ****   * @param  StartAddr: Start byte address
 182:FATFS/Target/bsp_driver_sd.c ****   * @param  EndAddr: End byte address
 183:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 184:FATFS/Target/bsp_driver_sd.c ****   */
 185:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_Erase(uint32_t StartAddr, uint32_t EndAddr)
 186:FATFS/Target/bsp_driver_sd.c **** {
 265              		.loc 1 186 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              	.LVL30:
 270 0000 08B5     		push	{r3, lr}
 271              	.LCFI8:
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 3, -8
 274              		.cfi_offset 14, -4
 275              	.LVL31:
 187:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 188:FATFS/Target/bsp_driver_sd.c **** 
 189:FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_Erase(&hsd, StartAddr, EndAddr) != HAL_OK)
 276              		.loc 1 189 0
 277 0002 0A46     		mov	r2, r1
 278 0004 0146     		mov	r1, r0
 279              	.LVL32:
 280 0006 0348     		ldr	r0, .L31
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 9


 281              	.LVL33:
 282 0008 FFF7FEFF 		bl	HAL_SD_Erase
 283              	.LVL34:
 284 000c 00B1     		cbz	r0, .L28
 190:FATFS/Target/bsp_driver_sd.c ****   {
 191:FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 285              		.loc 1 191 0
 286 000e 0120     		movs	r0, #1
 287              	.L28:
 288              	.LVL35:
 192:FATFS/Target/bsp_driver_sd.c ****   }
 193:FATFS/Target/bsp_driver_sd.c **** 
 194:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 195:FATFS/Target/bsp_driver_sd.c **** }
 289              		.loc 1 195 0
 290 0010 08BD     		pop	{r3, pc}
 291              	.L32:
 292 0012 00BF     		.align	2
 293              	.L31:
 294 0014 00000000 		.word	hsd
 295              		.cfi_endproc
 296              	.LFE137:
 298              		.section	.text.BSP_SD_GetCardState,"ax",%progbits
 299              		.align	1
 300              		.weak	BSP_SD_GetCardState
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu fpv4-sp-d16
 306              	BSP_SD_GetCardState:
 307              	.LFB138:
 196:FATFS/Target/bsp_driver_sd.c **** 
 197:FATFS/Target/bsp_driver_sd.c **** /**
 198:FATFS/Target/bsp_driver_sd.c ****   * @brief  Gets the current SD card data status.
 199:FATFS/Target/bsp_driver_sd.c ****   * @param  None
 200:FATFS/Target/bsp_driver_sd.c ****   * @retval Data transfer state.
 201:FATFS/Target/bsp_driver_sd.c ****   *          This value can be one of the following values:
 202:FATFS/Target/bsp_driver_sd.c ****   *            @arg  SD_TRANSFER_OK: No data transfer is acting
 203:FATFS/Target/bsp_driver_sd.c ****   *            @arg  SD_TRANSFER_BUSY: Data transfer is acting
 204:FATFS/Target/bsp_driver_sd.c ****   */
 205:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_GetCardState(void)
 206:FATFS/Target/bsp_driver_sd.c **** {
 308              		.loc 1 206 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312 0000 08B5     		push	{r3, lr}
 313              	.LCFI9:
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 3, -8
 316              		.cfi_offset 14, -4
 207:FATFS/Target/bsp_driver_sd.c ****   return ((HAL_SD_GetCardState(&hsd) == HAL_SD_CARD_TRANSFER ) ? SD_TRANSFER_OK : SD_TRANSFER_BUSY)
 317              		.loc 1 207 0
 318 0002 0348     		ldr	r0, .L35
 319 0004 FFF7FEFF 		bl	HAL_SD_GetCardState
 320              	.LVL36:
 208:FATFS/Target/bsp_driver_sd.c **** }
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 10


 321              		.loc 1 208 0
 322 0008 0438     		subs	r0, r0, #4
 323 000a 18BF     		it	ne
 324 000c 0120     		movne	r0, #1
 325 000e 08BD     		pop	{r3, pc}
 326              	.L36:
 327              		.align	2
 328              	.L35:
 329 0010 00000000 		.word	hsd
 330              		.cfi_endproc
 331              	.LFE138:
 333              		.section	.text.BSP_SD_GetCardInfo,"ax",%progbits
 334              		.align	1
 335              		.weak	BSP_SD_GetCardInfo
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 339              		.fpu fpv4-sp-d16
 341              	BSP_SD_GetCardInfo:
 342              	.LFB139:
 209:FATFS/Target/bsp_driver_sd.c **** 
 210:FATFS/Target/bsp_driver_sd.c **** /**
 211:FATFS/Target/bsp_driver_sd.c ****   * @brief  Get SD information about specific SD card.
 212:FATFS/Target/bsp_driver_sd.c ****   * @param  CardInfo: Pointer to HAL_SD_CardInfoTypedef structure
 213:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 214:FATFS/Target/bsp_driver_sd.c ****   */
 215:FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_GetCardInfo(HAL_SD_CardInfoTypeDef *CardInfo)
 216:FATFS/Target/bsp_driver_sd.c **** {
 343              		.loc 1 216 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              	.LVL37:
 348 0000 08B5     		push	{r3, lr}
 349              	.LCFI10:
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 3, -8
 352              		.cfi_offset 14, -4
 217:FATFS/Target/bsp_driver_sd.c ****   /* Get SD card Information */
 218:FATFS/Target/bsp_driver_sd.c ****   HAL_SD_GetCardInfo(&hsd, CardInfo);
 353              		.loc 1 218 0
 354 0002 0146     		mov	r1, r0
 355 0004 0148     		ldr	r0, .L39
 356              	.LVL38:
 357 0006 FFF7FEFF 		bl	HAL_SD_GetCardInfo
 358              	.LVL39:
 219:FATFS/Target/bsp_driver_sd.c **** }
 359              		.loc 1 219 0
 360 000a 08BD     		pop	{r3, pc}
 361              	.L40:
 362              		.align	2
 363              	.L39:
 364 000c 00000000 		.word	hsd
 365              		.cfi_endproc
 366              	.LFE139:
 368              		.section	.text.BSP_SD_AbortCallback,"ax",%progbits
 369              		.align	1
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 11


 370              		.weak	BSP_SD_AbortCallback
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 374              		.fpu fpv4-sp-d16
 376              	BSP_SD_AbortCallback:
 377              	.LFB143:
 220:FATFS/Target/bsp_driver_sd.c **** 
 221:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeCallBacksSection */
 222:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 223:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeCallBacksSection */
 224:FATFS/Target/bsp_driver_sd.c **** /**
 225:FATFS/Target/bsp_driver_sd.c ****   * @brief SD Abort callbacks
 226:FATFS/Target/bsp_driver_sd.c ****   * @param hsd: SD handle
 227:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 228:FATFS/Target/bsp_driver_sd.c ****   */
 229:FATFS/Target/bsp_driver_sd.c **** void HAL_SD_AbortCallback(SD_HandleTypeDef *hsd)
 230:FATFS/Target/bsp_driver_sd.c **** {
 231:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_AbortCallback();
 232:FATFS/Target/bsp_driver_sd.c **** }
 233:FATFS/Target/bsp_driver_sd.c **** 
 234:FATFS/Target/bsp_driver_sd.c **** /**
 235:FATFS/Target/bsp_driver_sd.c ****   * @brief Tx Transfer completed callback
 236:FATFS/Target/bsp_driver_sd.c ****   * @param hsd: SD handle
 237:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 238:FATFS/Target/bsp_driver_sd.c ****   */
 239:FATFS/Target/bsp_driver_sd.c **** void HAL_SD_TxCpltCallback(SD_HandleTypeDef *hsd)
 240:FATFS/Target/bsp_driver_sd.c **** {
 241:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_WriteCpltCallback();
 242:FATFS/Target/bsp_driver_sd.c **** }
 243:FATFS/Target/bsp_driver_sd.c **** 
 244:FATFS/Target/bsp_driver_sd.c **** /**
 245:FATFS/Target/bsp_driver_sd.c ****   * @brief Rx Transfer completed callback
 246:FATFS/Target/bsp_driver_sd.c ****   * @param hsd: SD handle
 247:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 248:FATFS/Target/bsp_driver_sd.c ****   */
 249:FATFS/Target/bsp_driver_sd.c **** void HAL_SD_RxCpltCallback(SD_HandleTypeDef *hsd)
 250:FATFS/Target/bsp_driver_sd.c **** {
 251:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_ReadCpltCallback();
 252:FATFS/Target/bsp_driver_sd.c **** }
 253:FATFS/Target/bsp_driver_sd.c **** 
 254:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN CallBacksSection_C */
 255:FATFS/Target/bsp_driver_sd.c **** /**
 256:FATFS/Target/bsp_driver_sd.c ****   * @brief BSP SD Abort callback
 257:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 258:FATFS/Target/bsp_driver_sd.c ****   * @note empty (up to the user to fill it in or to remove it if useless)
 259:FATFS/Target/bsp_driver_sd.c ****   */
 260:FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_AbortCallback(void)
 261:FATFS/Target/bsp_driver_sd.c **** {
 378              		.loc 1 261 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 262:FATFS/Target/bsp_driver_sd.c **** 
 263:FATFS/Target/bsp_driver_sd.c **** }
 383              		.loc 1 263 0
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 12


 384 0000 7047     		bx	lr
 385              		.cfi_endproc
 386              	.LFE143:
 388              		.section	.text.HAL_SD_AbortCallback,"ax",%progbits
 389              		.align	1
 390              		.global	HAL_SD_AbortCallback
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
 396              	HAL_SD_AbortCallback:
 397              	.LFB140:
 230:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_AbortCallback();
 398              		.loc 1 230 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402              	.LVL40:
 403 0000 08B5     		push	{r3, lr}
 404              	.LCFI11:
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 3, -8
 407              		.cfi_offset 14, -4
 231:FATFS/Target/bsp_driver_sd.c **** }
 408              		.loc 1 231 0
 409 0002 FFF7FEFF 		bl	BSP_SD_AbortCallback
 410              	.LVL41:
 232:FATFS/Target/bsp_driver_sd.c **** 
 411              		.loc 1 232 0
 412 0006 08BD     		pop	{r3, pc}
 413              		.cfi_endproc
 414              	.LFE140:
 416              		.section	.text.BSP_SD_WriteCpltCallback,"ax",%progbits
 417              		.align	1
 418              		.weak	BSP_SD_WriteCpltCallback
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 422              		.fpu fpv4-sp-d16
 424              	BSP_SD_WriteCpltCallback:
 425              	.LFB144:
 264:FATFS/Target/bsp_driver_sd.c **** 
 265:FATFS/Target/bsp_driver_sd.c **** /**
 266:FATFS/Target/bsp_driver_sd.c ****   * @brief BSP Tx Transfer completed callback
 267:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 268:FATFS/Target/bsp_driver_sd.c ****   * @note empty (up to the user to fill it in or to remove it if useless)
 269:FATFS/Target/bsp_driver_sd.c ****   */
 270:FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_WriteCpltCallback(void)
 271:FATFS/Target/bsp_driver_sd.c **** {
 426              		.loc 1 271 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430              		@ link register save eliminated.
 272:FATFS/Target/bsp_driver_sd.c **** 
 273:FATFS/Target/bsp_driver_sd.c **** }
 431              		.loc 1 273 0
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 13


 432 0000 7047     		bx	lr
 433              		.cfi_endproc
 434              	.LFE144:
 436              		.section	.text.HAL_SD_TxCpltCallback,"ax",%progbits
 437              		.align	1
 438              		.global	HAL_SD_TxCpltCallback
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv4-sp-d16
 444              	HAL_SD_TxCpltCallback:
 445              	.LFB141:
 240:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_WriteCpltCallback();
 446              		.loc 1 240 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              	.LVL42:
 451 0000 08B5     		push	{r3, lr}
 452              	.LCFI12:
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 3, -8
 455              		.cfi_offset 14, -4
 241:FATFS/Target/bsp_driver_sd.c **** }
 456              		.loc 1 241 0
 457 0002 FFF7FEFF 		bl	BSP_SD_WriteCpltCallback
 458              	.LVL43:
 242:FATFS/Target/bsp_driver_sd.c **** 
 459              		.loc 1 242 0
 460 0006 08BD     		pop	{r3, pc}
 461              		.cfi_endproc
 462              	.LFE141:
 464              		.section	.text.BSP_SD_ReadCpltCallback,"ax",%progbits
 465              		.align	1
 466              		.weak	BSP_SD_ReadCpltCallback
 467              		.syntax unified
 468              		.thumb
 469              		.thumb_func
 470              		.fpu fpv4-sp-d16
 472              	BSP_SD_ReadCpltCallback:
 473              	.LFB145:
 274:FATFS/Target/bsp_driver_sd.c **** 
 275:FATFS/Target/bsp_driver_sd.c **** /**
 276:FATFS/Target/bsp_driver_sd.c ****   * @brief BSP Rx Transfer completed callback
 277:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 278:FATFS/Target/bsp_driver_sd.c ****   * @note empty (up to the user to fill it in or to remove it if useless)
 279:FATFS/Target/bsp_driver_sd.c ****   */
 280:FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_ReadCpltCallback(void)
 281:FATFS/Target/bsp_driver_sd.c **** {
 474              		.loc 1 281 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              		@ link register save eliminated.
 282:FATFS/Target/bsp_driver_sd.c **** 
 283:FATFS/Target/bsp_driver_sd.c **** }
 479              		.loc 1 283 0
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 14


 480 0000 7047     		bx	lr
 481              		.cfi_endproc
 482              	.LFE145:
 484              		.section	.text.HAL_SD_RxCpltCallback,"ax",%progbits
 485              		.align	1
 486              		.global	HAL_SD_RxCpltCallback
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 490              		.fpu fpv4-sp-d16
 492              	HAL_SD_RxCpltCallback:
 493              	.LFB142:
 250:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_ReadCpltCallback();
 494              		.loc 1 250 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              	.LVL44:
 499 0000 08B5     		push	{r3, lr}
 500              	.LCFI13:
 501              		.cfi_def_cfa_offset 8
 502              		.cfi_offset 3, -8
 503              		.cfi_offset 14, -4
 251:FATFS/Target/bsp_driver_sd.c **** }
 504              		.loc 1 251 0
 505 0002 FFF7FEFF 		bl	BSP_SD_ReadCpltCallback
 506              	.LVL45:
 252:FATFS/Target/bsp_driver_sd.c **** 
 507              		.loc 1 252 0
 508 0006 08BD     		pop	{r3, pc}
 509              		.cfi_endproc
 510              	.LFE142:
 512              		.section	.text.BSP_SD_IsDetected,"ax",%progbits
 513              		.align	1
 514              		.weak	BSP_SD_IsDetected
 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 518              		.fpu fpv4-sp-d16
 520              	BSP_SD_IsDetected:
 521              	.LFB146:
 284:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END CallBacksSection_C */
 285:FATFS/Target/bsp_driver_sd.c **** #endif
 286:FATFS/Target/bsp_driver_sd.c **** 
 287:FATFS/Target/bsp_driver_sd.c **** /**
 288:FATFS/Target/bsp_driver_sd.c ****  * @brief  Detects if SD card is correctly plugged in the memory slot or not.
 289:FATFS/Target/bsp_driver_sd.c ****  * @param  None
 290:FATFS/Target/bsp_driver_sd.c ****  * @retval Returns if SD is detected or not
 291:FATFS/Target/bsp_driver_sd.c ****  */
 292:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_IsDetected(void)
 293:FATFS/Target/bsp_driver_sd.c **** {
 522              		.loc 1 293 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 8
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 00B5     		push	{lr}
 527              	.LCFI14:
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 15


 528              		.cfi_def_cfa_offset 4
 529              		.cfi_offset 14, -4
 530 0002 83B0     		sub	sp, sp, #12
 531              	.LCFI15:
 532              		.cfi_def_cfa_offset 16
 294:FATFS/Target/bsp_driver_sd.c ****   __IO uint8_t status = SD_PRESENT;
 533              		.loc 1 294 0
 534 0004 0123     		movs	r3, #1
 535 0006 8DF80730 		strb	r3, [sp, #7]
 295:FATFS/Target/bsp_driver_sd.c **** 
 296:FATFS/Target/bsp_driver_sd.c ****   if (BSP_PlatformIsDetected() == 0x0)
 536              		.loc 1 296 0
 537 000a FFF7FEFF 		bl	BSP_PlatformIsDetected
 538              	.LVL46:
 539 000e 10B9     		cbnz	r0, .L51
 297:FATFS/Target/bsp_driver_sd.c ****   {
 298:FATFS/Target/bsp_driver_sd.c ****     status = SD_NOT_PRESENT;
 540              		.loc 1 298 0
 541 0010 0023     		movs	r3, #0
 542 0012 8DF80730 		strb	r3, [sp, #7]
 543              	.L51:
 299:FATFS/Target/bsp_driver_sd.c ****   }
 300:FATFS/Target/bsp_driver_sd.c **** 
 301:FATFS/Target/bsp_driver_sd.c ****   return status;
 544              		.loc 1 301 0
 545 0016 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 302:FATFS/Target/bsp_driver_sd.c **** }
 546              		.loc 1 302 0
 547 001a 03B0     		add	sp, sp, #12
 548              	.LCFI16:
 549              		.cfi_def_cfa_offset 4
 550              		@ sp needed
 551 001c 5DF804FB 		ldr	pc, [sp], #4
 552              		.cfi_endproc
 553              	.LFE146:
 555              		.section	.text.BSP_SD_Init,"ax",%progbits
 556              		.align	1
 557              		.weak	BSP_SD_Init
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu fpv4-sp-d16
 563              	BSP_SD_Init:
 564              	.LFB130:
  48:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 565              		.loc 1 48 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569 0000 08B5     		push	{r3, lr}
 570              	.LCFI17:
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 3, -8
 573              		.cfi_offset 14, -4
 574              	.LVL47:
  51:FATFS/Target/bsp_driver_sd.c ****   {
 575              		.loc 1 51 0
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 16


 576 0002 FFF7FEFF 		bl	BSP_SD_IsDetected
 577              	.LVL48:
 578 0006 0128     		cmp	r0, #1
 579 0008 01D0     		beq	.L57
  53:FATFS/Target/bsp_driver_sd.c ****   }
 580              		.loc 1 53 0
 581 000a 0120     		movs	r0, #1
 582              	.LVL49:
 583              	.L54:
  59:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN AfterInitSection */
 584              		.loc 1 59 0
 585 000c 08BD     		pop	{r3, pc}
 586              	.LVL50:
 587              	.L57:
  56:FATFS/Target/bsp_driver_sd.c **** 
 588              		.loc 1 56 0
 589 000e 0248     		ldr	r0, .L58
 590 0010 FFF7FEFF 		bl	HAL_SD_Init
 591              	.LVL51:
  58:FATFS/Target/bsp_driver_sd.c **** }
 592              		.loc 1 58 0
 593 0014 FAE7     		b	.L54
 594              	.L59:
 595 0016 00BF     		.align	2
 596              	.L58:
 597 0018 00000000 		.word	hsd
 598              		.cfi_endproc
 599              	.LFE130:
 601              		.text
 602              	.Letext0:
 603              		.file 2 "c:\\touchgfx\\4.17.0\\env\\mingw\\msys\\1.0\\gnu-arm-gcc\\arm-none-eabi\\include\\machine
 604              		.file 3 "c:\\touchgfx\\4.17.0\\env\\mingw\\msys\\1.0\\gnu-arm-gcc\\arm-none-eabi\\include\\sys\\_s
 605              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 606              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 607              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f469xx.h"
 608              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 609              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 610              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 611              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 612              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 613              		.file 12 "FATFS/Target/fatfs_platform.h"
ARM GAS  C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 bsp_driver_sd.c
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:18     .text.BSP_SD_ITConfig:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:25     .text.BSP_SD_ITConfig:00000000 BSP_SD_ITConfig
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:40     .text.BSP_SD_DetectIT:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:47     .text.BSP_SD_DetectIT:00000000 BSP_SD_DetectIT
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:60     .text.BSP_SD_ReadBlocks:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:67     .text.BSP_SD_ReadBlocks:00000000 BSP_SD_ReadBlocks
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:108    .text.BSP_SD_ReadBlocks:0000001c $d
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:113    .text.BSP_SD_WriteBlocks:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:120    .text.BSP_SD_WriteBlocks:00000000 BSP_SD_WriteBlocks
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:161    .text.BSP_SD_WriteBlocks:0000001c $d
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:166    .text.BSP_SD_ReadBlocks_DMA:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:173    .text.BSP_SD_ReadBlocks_DMA:00000000 BSP_SD_ReadBlocks_DMA
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:206    .text.BSP_SD_ReadBlocks_DMA:00000014 $d
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:211    .text.BSP_SD_WriteBlocks_DMA:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:218    .text.BSP_SD_WriteBlocks_DMA:00000000 BSP_SD_WriteBlocks_DMA
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:251    .text.BSP_SD_WriteBlocks_DMA:00000014 $d
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:256    .text.BSP_SD_Erase:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:263    .text.BSP_SD_Erase:00000000 BSP_SD_Erase
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:294    .text.BSP_SD_Erase:00000014 $d
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:299    .text.BSP_SD_GetCardState:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:306    .text.BSP_SD_GetCardState:00000000 BSP_SD_GetCardState
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:329    .text.BSP_SD_GetCardState:00000010 $d
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:334    .text.BSP_SD_GetCardInfo:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:341    .text.BSP_SD_GetCardInfo:00000000 BSP_SD_GetCardInfo
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:364    .text.BSP_SD_GetCardInfo:0000000c $d
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:369    .text.BSP_SD_AbortCallback:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:376    .text.BSP_SD_AbortCallback:00000000 BSP_SD_AbortCallback
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:389    .text.HAL_SD_AbortCallback:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:396    .text.HAL_SD_AbortCallback:00000000 HAL_SD_AbortCallback
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:417    .text.BSP_SD_WriteCpltCallback:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:424    .text.BSP_SD_WriteCpltCallback:00000000 BSP_SD_WriteCpltCallback
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:437    .text.HAL_SD_TxCpltCallback:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:444    .text.HAL_SD_TxCpltCallback:00000000 HAL_SD_TxCpltCallback
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:465    .text.BSP_SD_ReadCpltCallback:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:472    .text.BSP_SD_ReadCpltCallback:00000000 BSP_SD_ReadCpltCallback
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:485    .text.HAL_SD_RxCpltCallback:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:492    .text.HAL_SD_RxCpltCallback:00000000 HAL_SD_RxCpltCallback
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:513    .text.BSP_SD_IsDetected:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:520    .text.BSP_SD_IsDetected:00000000 BSP_SD_IsDetected
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:556    .text.BSP_SD_Init:00000000 $t
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:563    .text.BSP_SD_Init:00000000 BSP_SD_Init
C:\Users\Cihat\AppData\Local\Temp\ccRfiAxz.s:597    .text.BSP_SD_Init:00000018 $d

UNDEFINED SYMBOLS
HAL_SD_ReadBlocks
hsd
HAL_SD_WriteBlocks
HAL_SD_ReadBlocks_DMA
HAL_SD_WriteBlocks_DMA
HAL_SD_Erase
HAL_SD_GetCardState
HAL_SD_GetCardInfo
BSP_PlatformIsDetected
HAL_SD_Init
